// variables for the lift and cap manipulator
int liftAngle;
int manipAngle;
int Placeholder;
int errorLift;
int errorManip;
int motorPower;
int mControl;
int lControl;
int LIFT_ARM_HOLD_RANGE_LOW = Placeholder;
int LIFT_ARM_HOLD_RANGE_HIGH = Placeholder;
int LIFT_ARM_HOLD_POWER = 10;
int LIFT_ARM_UPPER_LIMIT = Placeholder;
int LIFT_ARM_LOWER_LIMIT = Placeholder;
int MANIP_ARM_HOLD_RANGE_LOW = Placeholder;
int MANIP_ARM_HOLD_RANGE_HIGH = Placeholder;
int MANIP_ARM_HOLD_POWER = 10;
int MANIP_ARM_UPPER_LIMIT = Placeholder;
int MANIP_ARM_LOWER_LIMIT = Placeholder;

// sets motors to correct power for lift
void liftMotorSet ( int value, int deadzone )
{
	int drive_value = value;

	// holding power
	if( (SensorValue(liftPot) > LIFT_ARM_HOLD_RANGE_LOW) && (SensorValue(liftPot) < LIFT_ARM_HOLD_RANGE_HIGH) )
	{
		if( (drive_value >= 0) && ( drive_value < LIFT_ARM_HOLD_POWER ) )
			drive_value = LIFT_ARM_HOLD_POWER;
	}

	// limit range at extreme end of range
	if( (SensorValue(liftPot) > LIFT_ARM_UPPER_LIMIT ) && (drive_value > 0) )
		drive_value = 0;
	if( (SensorValue(liftPot) < LIFT_ARM_LOWER_LIMIT ) && (drive_value < 0) )
		drive_value = 0;
	if(abs(errorLift) < deadzone)
		drive_value = 10;
	motor[liftOne] = drive_value;
	motor[liftTwo] = drive_value;
}
//sets motors to correct power for manipulator
void manipMotorSet (int value, int deadzone )
{
	int drive_value = value;

	// holding power
	if( (SensorValue(manipPot) > MANIP_ARM_HOLD_RANGE_LOW) && (SensorValue(manipPot) < MANIP_ARM_HOLD_RANGE_HIGH) )
	{
		if( (drive_value >= 0) && ( drive_value < MANIP_ARM_HOLD_POWER ) )
			drive_value = MANIP_ARM_HOLD_POWER;
	}

	// limit range at extreme end of range
	if( (SensorValue(manipPot) > MANIP_ARM_UPPER_LIMIT ) && (drive_value > 0) )
		drive_value = 0;
	if( (SensorValue(manipPot) < MANIP_ARM_LOWER_LIMIT ) && (drive_value < 0) )
		drive_value = 0;
	if(abs(errorLift) < deadzone)
		drive_value = 10;
	motor[Placeholder] = drive_value;
}
// task for controlling the manipulator's movements
task CapControl()
{
	mControl = 0;
	while(true)
	{
		while(mControl)
		{
			errorManip = manipAngle - SensorValue(manipPot);
			motorPower = errorManip * .05;
			if( motorPower > 127 ) motorPower = 127;
			if( motorPower < -127 ) motorPower = -127;
			manipMotorSet (motorPower, 100);
			wait1Msec(20);
		}
		wait1Msec(10);
	}
}
//task for controlling the lift's movements
task LiftControl()
{
	lControl = 0;
	while(true)
	{
		while(lControl)
		{
			errorLift = liftAngle - SensorValue(manipPot);
			motorPower = errorLift * .05;
			if( motorPower > 127 ) motorPower = 127;
			if( motorPower < -127 ) motorPower = -127;
			liftMotorSet (motorPower, 100);
			wait1Msec(20);
		}
		wait1Msec(10);
	}
}
task usercontrol()
{
	startTask(CapControl);
	startTask(LiftControl);

	while (true)
	{
			//-----Lift-----//
		if(Placeholder==1)
		{
			lControl = 1;
			liftAngle = Placeholder;
		}
		else if(Placeholder==1)
		{
			liftMotorSet (127, 0);
			lControl = 0;
		}
		else if(Placeholder==1)
		{
			liftMotorSet (-127, 0);
			lControl = 0;
		}
		else if(lControl == 0 && Placeholder == 0 && Placeholder ==0)
		{
			liftMotorSet (LIFT_ARM_HOLD_POWER, 0);
		}
		//-----Cap-Manipulator----//
		if(Placeholder==1)
		{
			mControl = 1;
			manipAngle = Placeholder;
		}
		else if(Placeholder==1)
		{
			mControl = 1;
			manipAngle = Placeholder;
		}
		else if(Placeholder==1)
		{
			mControl = 1;
			manipAngle = Placeholder;
		}
		else if(Placeholder==1)
		{
			manipMotorSet (127, 0);
			mControl = 0;
		}
		else if(Placeholder==1)
		{
			manipMotorSet (-127, 0);
			mControl = 0;
		}
		else if(mControl == 0 && Placeholder == 0 && Placeholder ==0)
		{
			manipMotorSet (MANIP_ARM_HOLD_POWER, 0);
		}
		wait1Msec(10);
	}
}
